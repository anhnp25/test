version: "3.8"

services:
  frontend:
    image: node:16.18.1-alpine
    container_name: frontend
    command: ["./command.sh"]
    build: 
      dockerfile: Dockerfile
      context: ./frontend
    volumes:
      - "./frontend:/app"
      - "/app/node_modules"
    environment:
      - NODE_ENV=development
    ports:
      - 3001:3001
    
  # db:
  #   image: postgres:12-alpine
  #   container_name: db
  #   restart: always
  #   ports:
  #     - 5432:5432
  #   env_file:
  #     - ./postgres/.env
  #   volumes:
  #     - db:/var/lib/postgresql/data
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready"]
  #     interval: 1s
  #     timeout: 5s
  #     retries: 10

  # backend:
  #   image: node:16.18.1-alpine
  #   container_name: backend
  #   command: ["./command.sh"]
  #   build: 
  #     dockerfile: Dockerfile
  #     context: ./backend
  #   volumes:
  #     - "./backend:/app"
  #     - "/app/node_modules"
  #   ports:
  #     - 3000:3000
  #   depends_on:
  #     - db
  #   links:
  #     - db

  nginx:
    restart: always
    image: nginx
    build:
      dockerfile: Dockerfile
      context: ./nginx
    volumes:
    - ./frontend/build:/usr/share/nginx/html
    - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
    - "80:80"
    depends_on:
    - frontend
    # - backend

volumes:
  nginx:
  frontend:
  # backend:
  # db:
  #   driver: local
  #   name: db
